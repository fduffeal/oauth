{% extends 'html.html.twig' %}

{% set head_title = 'AuthBucket\\OAuth2' %}

{% block page %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1 id="oauth2" class="page-header">
                    <span class="hidden-xs hidden-sm visible-md-inline visible-lg-inline">AuthBucket\OAuth2</span>
                    <span class="visible-xs-inline visible-sm-inline hidden-md hidden-lg">OAuth2</span>
                </h1>
                <p>
                    <a href="https://travis-ci.org/authbucket/oauth2-php"><img src="https://travis-ci.org/authbucket/oauth2-php.svg?branch=master" alt="Build Status" /></a>
                    <a href='https://coveralls.io/github/authbucket/oauth2-php?branch=master'><img src='https://coveralls.io/repos/authbucket/oauth2-php/badge.svg?branch=master&service=github' alt='Coverage Status' /></a>
                    <a href="https://www.versioneye.com/php/authbucket:oauth2-php/dev-master"><img src="https://www.versioneye.com/php/authbucket:oauth2-php/dev-master/badge.svg" alt="Dependency Status" /></a>
                    <a href="https://packagist.org/packages/authbucket/oauth2-php"><img src="https://poser.pugx.org/authbucket/oauth2-php/v/stable.svg" alt="Latest Stable Version" /></a>
                    <a href="https://packagist.org/packages/authbucket/oauth2-php"><img src="https://poser.pugx.org/authbucket/oauth2-php/downloads.svg" alt="Total Downloads" /></a>
                    <a href="https://packagist.org/packages/authbucket/oauth2-php"><img src="https://poser.pugx.org/authbucket/oauth2-php/license.svg" alt="License" /></a>
                </p>
                <p class="lead">The primary goal of <a href="http://oauth2-php.authbucket.com/">AuthBucket\OAuth2</a> is to develop a standards compliant <a href="http://tools.ietf.org/html/rfc6749">RFC6749 OAuth2.0</a> library; secondary goal would be develop corresponding wrapper <a href="http://symfony.com">Symfony2 Bundle</a> and <a href="https://www.drupal.org">Drupal module</a>.</p>
                <p>This library bundle with a <a href="http://silex.sensiolabs.org/">Silex</a> based <a href="https://github.com/authbucket/oauth2-php/blob/master/src/Provider/AuthBucketOAuth2ServiceProvider.php">AuthBucketOAuth2ServiceProvider</a> for unit test and demo purpose. Installation and usage can refer as below.</p>

                <h2 id="installation" class="page-header">Installation</h2>
                <p class="lead">Simply add a dependency on <code>authbucket/oauth2-php</code> to your project's <code>composer.json</code> file if you use <a href="http://getcomposer.org/">Composer</a> to manage the dependencies of your project.</p>
                <p>Here is a minimal example of a <code>composer.json</code>:</p>
<pre><code class="json">{
    &quot;require&quot;: {
        &quot;authbucket/oauth2-php&quot;: &quot;~3.0&quot;
    }
}</code></pre>

                <h3 id="parameters">Parameters</h3>
                <p>The bundled <a href="https://github.com/authbucket/oauth2-php/blob/master/src/Provider/AuthBucketOAuth2ServiceProvider.php">AuthBucketOAuth2ServiceProvider</a> come with following parameters:</p>
                <ul>
                    <li><code>authbucket_oauth2.model</code>: (Optional) Override this with your own model classes, default with in-memory AccessToken for using resource firewall with remote debug endpoint.</li>
                    <li><code>authbucket_oauth2.model_manager.factory</code>: (Optional) Override this with your backend model managers, e.g. Doctrine ORM EntityRepository, default with in-memory implementation for using resource firewall with remote debug endpoint.</li>
                    <li><code>authbucket_oauth2.user_provider</code>: (Optional) For using <code>grant_type = password</code>, override this parameter with your own user provider, e.g. using InMemoryUserProvider or a Doctrine ORM EntityRepository that implements UserProviderInterface.</li>
                </ul>

                <h3 id="services">Services</h3>
                <p>The bundled <a href="https://github.com/authbucket/oauth2-php/blob/master/src/Provider/AuthBucketOAuth2ServiceProvider.php">AuthBucketOAuth2ServiceProvider</a> come with following services controller which simplify the OAuth2.0 controller implementation overhead:</p>
                <ul>
                    <li><code>authbucket_oauth2.oauth2_controller</code>: OAuth2 endpoint controller.</li>
                </ul>

                <h3 id="registering">Registering</h3>
                <p>If you are using <a href="http://silex.sensiolabs.org/">Silex</a>, register <a href="https://github.com/authbucket/oauth2-php/blob/master/src/Provider/AuthBucketOAuth2ServiceProvider.php">AuthBucketOAuth2ServiceProvider</a> as below:</p>
<pre><code class="php">$app-&gt;register(new AuthBucket\OAuth2\Provider\AuthBucketOAuth2ServiceProvider());</code></pre>
                <p>Moreover, enable following service providers if that's not already the case:</p>
<pre><code class="php">$app-&gt;register(new Silex\Provider\MonologServiceProvider());
$app-&gt;register(new Silex\Provider\SecurityServiceProvider());
$app-&gt;register(new Silex\Provider\ValidatorServiceProvider());</code></pre>

                <h2 id="usage" class="page-header">Usage</h2>
                <p class="lead">This library seperate the endpoint logic in frontend firewall and backend controller point of view, so you will need to setup both for functioning.</p>
                <p>To enable the built-in controller with corresponding routing, you need to mount it manually:</p>
<pre><code class="php">$app-&gt;get(&#39;/api/oauth2/authorize&#39;, &#39;authbucket_oauth2.oauth2_controller:authorizeAction&#39;)
    -&gt;bind(&#39;api_oauth2_authorize&#39;);

$app-&gt;post(&#39;/api/oauth2/token&#39;, &#39;authbucket_oauth2.oauth2_controller:tokenAction&#39;)
    -&gt;bind(&#39;api_oauth2_token&#39;);

$app-&gt;match(&#39;/api/oauth2/debug&#39;, &#39;authbucket_oauth2.oauth2_controller:debugAction&#39;)
    -&gt;bind(&#39;api_oauth2_debug&#39;);</code></pre>
                <p>Below is a list of recipes that cover some common use cases.</p>

                <h3 id="authorization-endpoint">Authorization Endpoint</h3>
                <p>We don't provide custom firewall for this endpoint, which you should protect it by yourself, authenticate and capture the user credential, e.g. by <a href="http://silex.sensiolabs.org/doc/providers/security.html">SecurityServiceProvider</a>:</p>
<pre><code class="php">$app[&#39;security.encoder.digest&#39;] = $app-&gt;share(function ($app) {
    return new Symfony\Component\Security\Core\Encoder\PlaintextPasswordEncoder();
});

$app[&#39;security.user_provider.default&#39;] = $app[&#39;security.user_provider.inmemory._proto&#39;]([
    &#39;demousername1&#39; =&gt; [&#39;ROLE_USER&#39;, &#39;demopassword1&#39;],
    &#39;demousername2&#39; =&gt; [&#39;ROLE_USER&#39;, &#39;demopassword2&#39;],
    &#39;demousername3&#39; =&gt; [&#39;ROLE_USER&#39;, &#39;demopassword3&#39;],
]);

$app[&#39;security.firewalls&#39;] = [
    &#39;api_oauth2_authorize&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/oauth2/authorize$&#39;,
        &#39;http&#39; =&gt; true,
        &#39;users&#39; =&gt; $app[&#39;security.user_provider.default&#39;],
    ],
];</code></pre>

                <h3 id="token-endpoint">Token Endpoint</h3>
                <p>Similar as authorization endpoint, we need to protect this endpoint with our custom firewall <code>oauth2_token</code>:</p>
<pre><code class="php">$app[&#39;security.firewalls&#39;] = [
    &#39;api_oauth2_token&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/oauth2/token$&#39;,
        &#39;oauth2_token&#39; =&gt; true,
    ],
];</code></pre>

                <h3 id="debug-endpoint">Debug Endpoint</h3>
                <p>We should protect this endpoint with our custom firewall <code>oauth2_resource</code>:</p>
<pre><code class="php">$app[&#39;security.firewalls&#39;] = [
    &#39;api_oauth2_debug&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/oauth2/debug$&#39;,
        &#39;oauth2_resource&#39; =&gt; true,
    ],
];</code></pre>

                <h3 id="resource-endpoint">Resource Endpoint</h3>
                <p>We don't provide other else resource endpoint controller implementation besides above debug endpoint. You should consider implement your own endpoint with custom logic, e.g. fetching user email address or profile image.</p>
                <p>On the other hand, you can protect your resource server endpoint with our custom firewall <code>oauth2_resource</code>. Shorthand version (default assume resource server bundled with authorization server, query local model manager, without scope protection):</p>
<pre><code class="php">$app[&#39;security.firewalls&#39;] = [
    &#39;api_resource&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/resource&#39;,
        &#39;oauth2_resource&#39; =&gt; true,
    ],
];</code></pre>
                <p>Longhand version (assume resource server bundled with authorization server, query local model manager, protect with scope <code>demoscope1</code>):</p>
<pre><code class="php">$app[&#39;security.firewalls&#39;] = [
    &#39;api_resource&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/resource&#39;,
        &#39;oauth2_resource&#39; =&gt; [
            &#39;resource_type&#39; =&gt; &#39;model&#39;,
            &#39;scope&#39; =&gt; [&#39;demoscope1&#39;],
        ],
    ],
];</code></pre>
                <p>If authorization server is hosting somewhere else, you can protect your local resource endpoint by query remote authorization server debug endpoint:</p>
<pre><code class="php">$app[&#39;security.firewalls&#39;] = [
    &#39;api_resource&#39; =&gt; [
        &#39;pattern&#39; =&gt; &#39;^/api/resource&#39;,
        &#39;oauth2_resource&#39; =&gt; [
            &#39;resource_type&#39; =&gt; &#39;debug_endpoint&#39;,
            &#39;scope&#39; =&gt; [&#39;demoscope1&#39;],
            &#39;options&#39; =&gt; [
                &#39;debug_endpoint&#39; =&gt; &#39;http://example.com/api/oauth2/debug&#39;,
                &#39;cache&#39; =&gt; true,
            ],
        ],
    ],
];</code></pre>

                <h2 id="demo" class="page-header">Demo</h2>
                <p class="lead">The demo is based on <a href="http://silex.sensiolabs.org/">Silex</a> and <a href="https://github.com/authbucket/oauth2-php/blob/master/src/Provider/AuthBucketOAuth2ServiceProvider.php">AuthBucketOAuth2ServiceProvider</a>. Read though <a href="http://oauth2-php.authbucket.com/demo">Demo</a> for more information.</p>
                <p>You may also run the demo locally. Open a console and execute the following command to install the latest version in the <code>oauth2-php</code> directory:</p>
<pre><code class="bash">$ composer create-project authbucket/oauth2-php authbucket/oauth2-php &quot;~3.0&quot;</code></pre>
                <p>Then use the PHP built-in web server to run the demo application:</p>
<pre><code class="bash">$ cd authbucket/oauth2-php
$ ./app/console server:run</code></pre>
                <p>If you get the error <code>There are no commands defined in the &quot;server&quot; namespace.</code>, then you are probably using PHP 5.3. That's ok! But the built-in web server is only available for PHP 5.4.0 or higher. If you have an older version of PHP or if you prefer a traditional web server such as Apache or Nginx, read the <a href="http://silex.sensiolabs.org/doc/web_servers.html">Configuring a web server</a> article.</p>
                <p>Open your browser and access the <a href="http://127.0.0.1:8000">http://127.0.0.1:8000</a> URL to see the Welcome page of demo application.</p>
                <p>Also access <a href="http://127.0.0.1:8000/admin/refresh_database">http://127.0.0.1:8000/admin/refresh_database</a> to initialize the bundled SQLite database with user account <code>admin</code>:<code>secrete</code>.</p>

                <h2 id="documentation" class="page-header">Documentation</h2>
                <p class="lead">OAuth2's documentation is built with <a href="https://github.com/fabpot/Sami">Sami</a> and publicly hosted on <a href="http://authbucket.github.io/oauth2-php">GitHub Pages</a>.</p>
                <p>To built the documents locally, execute the following command:</p>
<pre><code class="bash">$ composer sami</code></pre>
                <p>Open <code>build/sami/index.html</code> with your browser for the documents.</p>

                <h2 id="tests" class="page-header">Tests</h2>
                <p class="lead">This project is coverage with <a href="http://phpunit.de/">PHPUnit</a> test cases; CI result can be found from <a href="https://travis-ci.org/authbucket/oauth2-php">Travis CI</a>; code coverage report can be found from <a href="https://coveralls.io/r/authbucket/oauth2-php">Coveralls</a>.</p>
                <p>To run the test suite locally, execute the following command:</p>
<pre><code class="bash">$ composer phpunit</code></pre>
                <p>Open <code>build/logs/html</code> with your browser for the coverage report.</p>

                <h2 id="references" class="page-header">References</h2>
                <ul>
                    <li><a href="http://tools.ietf.org/html/rfc6749">RFC6749</a></li>
                    <li><a href="http://oauth2-php.authbucket.com/demo">Demo</a></li>
                    <li><a href="http://authbucket.github.io/oauth2-php/">API</a></li>
                    <li><a href="https://github.com/authbucket/oauth2-php">GitHub</a></li>
                    <li><a href="https://packagist.org/packages/authbucket/oauth2-php">Packagist</a></li>
                    <li><a href="https://travis-ci.org/authbucket/oauth2-php">Travis CI</a></li>
                    <li><a href="https://coveralls.io/r/authbucket/oauth2-php">Coveralls</a></li>
                </ul>

                <h2 id="license" class="page-header">License</h2>
                <ul>
                    <li>Code released under <a href="https://github.com/authbucket/oauth2-php/blob/master/LICENSE">MIT</a></li>
                    <li>Docs released under <a href="http://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></li>
                </ul>
            </div>
        </div>
    </div>
{% endblock %}
